/*
 * Copyright (C) 2013 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package blackman.matt.infinitebrowser;

import android.app.Activity;

import android.app.ActionBar;
import android.app.DialogFragment;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.support.v4.widget.DrawerLayout;

import blackman.matt.board.Board;

/**
 * The main method of Infinity Browser.
 * Starts when the program is launched and is in charge of starting and managing activities
 * within the program.
 */
public class InfinityBrowser extends Activity
        implements NavigationDrawerFragment.NavigationDrawerCallbacks,
                   Board.OnFragmentInteractionListener {

    /**
     * Fragment managing the behaviors, interactions and presentation of the navigation drawer.
     */
    private NavigationDrawerFragment mNavigationDrawerFragment;

    /**
     * Generic onCreate method generated by the IDE. Called when the application is first
     * initialized.
     * @param savedInstanceState ??
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Intent intent = getIntent();
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
        Boolean ageAccept = preferences.getBoolean("age_guard_accept", false);

        if(!ageAccept){
            DialogFragment ageGuardDialog = new AgeGuardDialogFragment();
            ageGuardDialog.show(getFragmentManager(), "ageGuardDialog");
        }
        ageAccept = preferences.getBoolean("age_guard_accept", false);

        if(ageAccept) {
            FragmentManager fragmentManager = getFragmentManager();
            FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();

            if(intent != null && intent.getData() != null) {
                Board newBoard = Board.newInstance(intent.getDataString());

                fragmentTransaction.replace(R.id.container, newBoard, intent.getDataString());
            } else {
                String defaultBoard = "http://8chan.co/" +
                        preferences.getString("default_board", "").toLowerCase() + "/";

                Board newBoard = Board.newInstance(defaultBoard);

                fragmentTransaction.replace(R.id.container, newBoard, defaultBoard);
            }
            fragmentTransaction.addToBackStack(null);
            fragmentTransaction.commit();
        }

        mNavigationDrawerFragment = (NavigationDrawerFragment)
                getFragmentManager().findFragmentById(R.id.navigation_drawer);

        // Set up the drawer with new onClickListener
        mNavigationDrawerFragment.setUp(
                R.id.navigation_drawer,
                (DrawerLayout) findViewById(R.id.drawer_layout));
    }

    /**
     * Replaces the item fragments in the navigation drawer when a new item is selected.
     * @param position the position of the newly selected item
     */
    @Override
    public void onNavigationDrawerItemSelected(int position) {
        // update the main content by replacing fragments
        FragmentManager fragmentManager = getFragmentManager();
        fragmentManager.beginTransaction()
                .replace(R.id.container, PlaceholderFragment.newInstance(position + 1))
                .commit();
    }

    /**
     * Called when the navigation drawer is opened and the position is changed.
     *
     * @param number the position of the navigation drawer.
     */
    public void onSectionAttached(int number) {
        //mTitle = boardLink;
        //getActionBar().setTitle(mTitle);
    }

    /**
     * Restores the action bar when called.
     */
    public void restoreActionBar() {
        ActionBar actionBar = getActionBar();
        assert actionBar != null;
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
        actionBar.setDisplayShowTitleEnabled(true);
    }


    /**
     * Adds the options menu to the main window
     * @param menu the menu to add
     * @return Returns a bool if the menu was created
     */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        if (!mNavigationDrawerFragment.isDrawerOpen()) {
            // Only show items in the action bar relevant to this screen
            // if the drawer is not showing. Otherwise, let the drawer
            // decide what to show in the action bar.
            getMenuInflater().inflate(R.menu.board_browser, menu);
            restoreActionBar();
            return true;
        }
        return super.onCreateOptionsMenu(menu);
    }

    /**
     * When an option menu item is selected this handles the case.
     * @param item the item selected in the menu
     * @return True if the item already exists or it is created
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        switch(item.getItemId()) {
            case R.id.action_settings:
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }

    /**
     * Creates a new board for a post when reply button is hit.
     *
     * @param postLink Link to the thread to open up
     */
    @Override
    public void onReplyClicked(String postLink) {
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
        Boolean ageAccept = preferences.getBoolean("age_guard_accept", false);

        if(ageAccept) {
            new Board();
            Board newThread = Board.newInstance(postLink);
            FragmentTransaction transaction = getFragmentManager().beginTransaction();

            transaction.replace(R.id.container, newThread);
            transaction.addToBackStack(null);

            transaction.commit();
        }
    }

    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {
        boolean result = super.onPrepareOptionsMenu(menu);
        menu.findItem(R.id.action_settings).setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
            @Override
            public boolean onMenuItemClick(MenuItem menuItem) {
                InfinityBrowser.this.startActivity(new Intent(InfinityBrowser.this, SettingsActivity.class));
                return true;
            }
        });
        return result;
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {
        /**
         * The fragment argument representing the section number for this
         * fragment.
         */
        private static final String ARG_SECTION_NUMBER = "section_number";

        /**
         * Returns a new instance of this fragment for the given section
         * number.
         */
        public static PlaceholderFragment newInstance(int sectionNumber) {
            PlaceholderFragment fragment = new PlaceholderFragment();
            Bundle args = new Bundle();
            args.putInt(ARG_SECTION_NUMBER, sectionNumber);
            fragment.setArguments(args);
            return fragment;
        }

        /**
         * Empty constructor generated by the class
         */
        public PlaceholderFragment() {
        }

        /**
         * Called when the view is created
         * @param inflater The fragment inflator and context
         * @param container The container for the menu items
         * @param savedInstanceState Last state of the instance
         * @return Returns the view just created
         */
        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                Bundle savedInstanceState) {
            return inflater.inflate(R.layout.fragment_board, container, false);
        }

        /**
         * Called when the user or app focuses the fragment
         * @param activity the activity which is a parent to this
         */
        @Override
        public void onAttach(Activity activity) {
            super.onAttach(activity);
            ((InfinityBrowser) activity).onSectionAttached(
                    getArguments().getInt(ARG_SECTION_NUMBER));
        }
    }
}
